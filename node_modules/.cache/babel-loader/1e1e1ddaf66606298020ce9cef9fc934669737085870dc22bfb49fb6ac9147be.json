{"ast":null,"code":"var _jsxFileName = \"D:\\\\Deepak Projects\\\\karthik\\\\frontend\\\\src\\\\Pages\\\\Items.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Items.css\";\nimport badge1 from './ItemAssests/quality.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Items = props => {\n  _s();\n  const [update, setUpdate] = useState({}); // Tracks if input field is shown\n  const [newPrice, setNewPrice] = useState(props.price);\n  const [reload, setReload] = useState(false); // Stores new price\n  const [search, setSearch] = useState();\n  const handleClick = id => {\n    setUpdate(prevState => ({\n      ...prevState,\n      [id]: !prevState[id] // Toggle input field visibility\n    }));\n  };\n  const handleModify = async id => {\n    if (parseFloat(newPrice) === parseFloat(props.price)) {\n      alert(\"price not changed\");\n      setReload(prev => !prev);\n      return;\n    }\n    const updatedProduct = {\n      name: props.name,\n      price: newPrice,\n      category: props.category,\n      quality: props.quality,\n      imageUrl: props.image\n    };\n    try {\n      const response = await fetch(`http://localhost:8080/product/update/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updatedProduct)\n      });\n      if (response.ok) {\n        alert(\"Price updated successfully!\");\n\n        // Fetch updated product list\n        const res = await fetch(\"http://localhost:8080/product/all\");\n        if (!res.ok) throw new Error(\"Failed to fetch updated product list\");\n        const data = await res.json();\n        setUpdate(prevState => ({\n          ...prevState,\n          [id]: false\n        }));\n        props.setItems(data); // Hide input field after update\n      } else {\n        alert(\"Failed to update price.\");\n      }\n    } catch (error) {\n      console.error(\"Error updating price:\", error);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      const response = await fetch(`http://localhost:8080/product/delete/${id}`, {\n        method: \"DELETE\"\n      });\n      if (response.ok) {\n        alert(\"Product deleted successfully!\");\n\n        // Fetch updated product list\n        const res = await fetch(\"http://localhost:8080/product/all\");\n        if (!res.ok) throw new Error(\"Failed to fetch updated product list\");\n        const data = await res.json();\n        props.setItems(data);\n      } else {\n        alert(\"Failed to delete product.\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    style: {\n      width: \"18rem\",\n      height: \"28rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: props.image,\n      className: \"card-img-top\",\n      alt: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), props.quality === '1st quality' && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: badge1,\n      alt: \"badge\",\n      style: {\n        position: \"absolute\",\n        top: \"10px\",\n        right: \"10px\",\n        height: \"50px\",\n        display: \"block\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-text\",\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"card-title\",\n        children: [props.category, \" : \\u20B9\", newPrice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), update[props.id] && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Enter new price\",\n        value: newPrice,\n        onChange: e => setNewPrice(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardButton\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => {\n            if (props.action === \"Modify Price\") {\n              if (update[props.id] && newPrice) {\n                handleModify(props.id); // Second click updates price\n              } else {\n                handleClick(props.id); // First click shows input field\n              }\n            } else if (props.action === \"Delete\") {\n              handleDelete(props.id);\n            } else if (props.action === \"Add to Cart\") {\n              console.log(\"Added to Cart\", props.id);\n            }\n          },\n          children: props.action\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(Items, \"PjAO02Qbwh3LPIQbA40iz3ecDjg=\");\n_c = Items;\nexport default Items;\nvar _c;\n$RefreshReg$(_c, \"Items\");","map":{"version":3,"names":["React","useState","badge1","jsxDEV","_jsxDEV","Items","props","_s","update","setUpdate","newPrice","setNewPrice","price","reload","setReload","search","setSearch","handleClick","id","prevState","handleModify","parseFloat","alert","prev","updatedProduct","name","category","quality","imageUrl","image","response","fetch","method","headers","body","JSON","stringify","ok","res","Error","data","json","setItems","error","console","handleDelete","className","style","width","height","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","position","top","right","display","type","placeholder","value","onChange","e","target","onClick","action","log","_c","$RefreshReg$"],"sources":["D:/Deepak Projects/karthik/frontend/src/Pages/Items.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Items.css\";\r\nimport badge1 from './ItemAssests/quality.png';\r\n\r\nconst Items = (props) => {\r\n  const [update, setUpdate] = useState({}); // Tracks if input field is shown\r\n  const [newPrice, setNewPrice] = useState(props.price);\r\n  const [reload, setReload] = useState(false); // Stores new price\r\n  const [search,setSearch]=useState();\r\n  const handleClick = (id) => {\r\n    setUpdate((prevState) => ({\r\n      ...prevState,\r\n      [id]: !prevState[id], // Toggle input field visibility\r\n    }));\r\n  };\r\n\r\n  const handleModify = async (id) => {\r\n    if (parseFloat(newPrice) === parseFloat(props.price)) {\r\n      alert(\"price not changed\");\r\n      setReload(prev=>!prev);\r\n      return;\r\n    }\r\n  \r\n        \r\n    const updatedProduct = {\r\n      name:props.name,\r\n      price: newPrice,\r\n      category:props.category,\r\n      quality:props.quality,\r\n      imageUrl:props.image,\r\n    };\r\n  \r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/product/update/${id}`, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(updatedProduct),\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert(\"Price updated successfully!\");\r\n\r\n        // Fetch updated product list\r\n        const res = await fetch(\"http://localhost:8080/product/all\");\r\n        if (!res.ok) throw new Error(\"Failed to fetch updated product list\");\r\n\r\n        const data = await res.json();\r\n        setUpdate((prevState) => ({ ...prevState, [id]: false}));\r\n        props.setItems(data);  // Hide input field after update\r\n      }\r\n      else {\r\n        alert(\"Failed to update price.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating price:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/product/delete/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert(\"Product deleted successfully!\");\r\n\r\n        // Fetch updated product list\r\n        const res = await fetch(\"http://localhost:8080/product/all\");\r\n        if (!res.ok) throw new Error(\"Failed to fetch updated product list\");\r\n\r\n        const data = await res.json();\r\n        props.setItems(data);\r\n      } else {\r\n        alert(\"Failed to delete product.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\" style={{ width: \"18rem\", height: \"28rem\" }}>\r\n      <img src={props.image} className=\"card-img-top\" alt={props.name} />\r\n      {props.quality==='1st quality' &&(\r\n      <img\r\n    src={badge1}\r\n    alt=\"badge\"\r\n    style={{\r\n      position: \"absolute\",\r\n      top: \"10px\",\r\n      right: \"10px\",\r\n      height: \"50px\",\r\n      display:\"block\",\r\n    }}\r\n  />)}\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-text\">{props.name}</h5>\r\n        <h6 className=\"card-title\">{props.category} : â‚¹{newPrice}</h6>\r\n        {update[props.id] && (\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Enter new price\"\r\n            value={newPrice}\r\n            onChange={(e) => setNewPrice(e.target.value)}\r\n          />\r\n        )}\r\n        <div className=\"cardButton\">\r\n          <button\r\n            className=\"button\"\r\n            onClick={() => {\r\n              if (props.action === \"Modify Price\") {\r\n                if (update[props.id] && newPrice) {\r\n                  handleModify(props.id); // Second click updates price\r\n                } else {\r\n                  handleClick(props.id); // First click shows input field\r\n                }\r\n              } else if (props.action === \"Delete\") {\r\n                handleDelete(props.id);\r\n              } else if (props.action === \"Add to Cart\") {\r\n                console.log(\"Added to Cart\", props.id);\r\n              }\r\n            }}\r\n          >\r\n            {props.action}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Items;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}